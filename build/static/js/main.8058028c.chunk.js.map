{"version":3,"sources":["components/menu/ScrollToTop.js","components/menu/header.js","components/components/SliderMainZero.js","components/components/FeatureBox.js","store/selectors/index.js","core/axios.js","store/actions/index.js","store/utils.js","components/components/Clock.js","components/components/NftCard.js","components/pages/home2.js","components/components/SliderMainParticleGrey1.js","components/pages/home4.js","components/components/CarouselNewReduxNew.js","components/app.js","serviceWorker.js","store/reducers/nfts.js","store/reducers/hotCollections.js","store/reducers/authorList.js","store/reducers/filters.js","store/reducers/blogs.js","store/reducers/index.js","store/index.js","index.js"],"names":["ScrollToTop","props","state","is_visible","scrollComponent","this","document","addEventListener","e","toggleVisibility","window","pageYOffset","setState","scrollTo","top","behavior","id","className","onClick","scrollToTop","Component","setDefaultBreakpoints","xs","l","xl","NavLink","getProps","isCurrent","Header","React","useState","setAccount","connectWallet","connectBtn","setConnectBtn","a","ethereum","request","method","params","chainId","chainName","rpcUrls","nativeCurrency","name","symbol","decimals","blockExplorerUrls","web3","Web3","enable","eth","getAccounts","accounts","account","shotAcc","push","slice","length","currentProvider","console","log","alert","connectWalletAlready","on","location","reload","error","net","getId","getBalance","balance","utils","fromWei","setOpenMenu","setOpenMenu1","setOpenMenu2","setOpenMenu3","closeMenu","useOnclickOutside","showmenu","btn_icon","btn_icon_pop","btn_icon_not","useEffect","header","getElementById","totop","sticky","offsetTop","scrollCallBack","classList","add","remove","removeEventListener","to","down","href","target","fadeInUp","keyframes","useSlidermainzero","showContent","setShowContent","mintAirDrop","Web3EthContract","setProvider","SmartContractObj","nftAbi","methods","send","from","receipt","checkAirdrop","airdrop","call","content","receiveAirdrop","src","alt","width","delay","duration","nftBreakdownState","NFT","nftBreakdown","nftFilter","createSelector","nfts","data","filter","nft","deadline","createStructuredSelector","categories","filters","selectedCategories","status","selectedStatus","itemsType","selectedItemsType","collections","selectedCollections","nftTitle","filterNftTitle","size","has","category","item_type","trim","pattern","RegExp","title","match","axios","create","CancelToken","source","getNftBreakdown","asyncAction","getNftShowcase","getNftDetail","getHotCollections","getAuthorList","getAuthorRanking","getBlogPosts","getRecentPosts","getTags","getComments","clearNfts","action","clearFilter","filterCategories","filterStatus","filterItemsType","filterCollections","initEntityState","styled","div","initialValue","loading","loadFailed","canceler","entityLoadingStarted","entityLoadingSucceeded","entityLoadingFailed","handleSelection","selectedIds","selectId","singleSelect","selected","Set","delete","hometwo","SliderMainZero","inline","mysteryBox","_amount","mint","value","toString","slidermainparticle","triggerOnce","open","GlobalStyles","createGlobalStyle","home","style","backgroundImage","ScrollTop","children","PosedRouter","key","app","path","exact","Boolean","hostname","defaultState","nftDetail","nftShowcase","states","type","getType","actions","payload","success","failure","hotCollections","authorList","authorRanking","blogPosts","recentPosts","tags","comments","rootReducer","combineReducers","nftReducer","hotCollection","hotCollectionsReducer","authors","authorListReducer","filterReducer","blogs","blogPostsReducer","reducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8058028c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class ScrollToTop extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      is_visible: false\n    };\n  }\n\n  componentDidMount() {\n    var scrollComponent = this;\n    document.addEventListener(\"scroll\", function(e) {\n      scrollComponent.toggleVisibility();\n    });\n  }\n\n  toggleVisibility() {\n    if (window.pageYOffset > 600) {\n      this.setState({\n        is_visible: true\n      });\n    } else { this.setState({\n        is_visible: false\n      });\n    }\n  }\n\n  scrollToTop() {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  }\n\n  render() {\n    const { is_visible } = this.state;\n    return (\n      <div id='scroll-to-top' className='init'>\n        {is_visible && (\n          <div onClick={() => this.scrollToTop()}>\n            <i className=\"\"></i>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport Breakpoint, { BreakpointProvider, setDefaultBreakpoints } from \"react-socks\";\n//import { header } from 'react-bootstrap';\nimport { Link } from '@reach/router';\nimport useOnclickOutside from \"react-cool-onclickoutside\";\nimport Web3 from 'web3';\n\n\nsetDefaultBreakpoints([\n  { xs: 0 },\n  { l: 1199 },\n  { xl: 1200 }\n]);\n\nconst NavLink = props => (\n  <Link \n    {...props}\n    getProps={({ isCurrent }) => {\n      // the object returned here is passed to the\n      // anchor element's props\n      return {\n        className: isCurrent ? 'active' : 'non-active',\n      };\n    }}\n  />\n);\n\n//\n\n\n//\n\nconst Header = function({ className }) {\n    const [account, setAccount] = React.useState(\"\");\n    const [connectBtn, setConnectBtn] = React.useState([<a onClick={() => connectWallet()} >Connect MetaMask</a>]);\n\n    const connectWallet = async() => {\n      if (window.ethereum) {\n        window.ethereum.request({\n          method: \"wallet_addEthereumChain\",\n          params: [{chainId: \"0x61\",\n            chainName: \"BSCTESTNET\",\n            rpcUrls: [\"https://data-seed-prebsc-1-s1.binance.org:8545\"],\n            nativeCurrency: {\n              name: \"BINANCE COIN\",\n              symbol: \"BNB\",\n              decimals: 18,\n            },\n            blockExplorerUrls: [\"https://testnet.bscscan.com/\"],\n          }],\n        });\n\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable()\n        const accounts = await window.web3.eth.getAccounts();\n        const account = accounts[0];\n\n        setAccount(account[0]);\n\n        const shotAcc = [];\n          shotAcc.push( <> <a >{account.slice(0, 8) + (account.length > 8 ? \"...\" : \"\") }</a></>);\n          setConnectBtn( shotAcc );\n      }\n      else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider);\n        console.log('currentProvider');\n      }\n      else {\n        window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n      }\n    }\n\n    const connectWalletAlready = async() =>{\n      if(typeof window.ethereum!=='undefined'){\n        window.ethereum.on(\"accountsChanged\", (accounts: string[]) => {\n          window.location.reload();\n        });\n        // Subscribe to chainId change\n        window.ethereum.on(\"chainChanged\", (chainId: number) => {\n          window.location.reload();\n        });\n\n        // Subscribe to provider disconnection\n        window.ethereum.on(\"disconnect\", (error: { code: number; message: string }) => {\n          console.log(error);\n        });\n\n        const web3 = new Web3(window.ethereum);\n        const netId = await web3.eth.net.getId();\n        const accounts = await web3.eth.getAccounts();\n        const account = accounts[0];\n        console.log(account);\n        //load user account balance\n        if(typeof account !=='undefined'){\n          const balance = await web3.eth.getBalance(account);\n          const accountBalance =  web3.utils.fromWei(balance);\n\n          const shotAcc = [];\n          shotAcc.push( <> <a >{account.slice(0, 8) + (account.length > 8 ? \"...\" : \"\") }</a></>);\n          setConnectBtn( shotAcc );\n        } else {\n          //window.alert('Please login with MetaMask')\n        }\n\n      } \n    };\n\n    const [openMenu, setOpenMenu] = React.useState(false);\n    const [openMenu1, setOpenMenu1] = React.useState(false);\n    const [openMenu2, setOpenMenu2] = React.useState(false);\n    const [openMenu3, setOpenMenu3] = React.useState(false);\n    const handleBtnClick = () => {\n      setOpenMenu(!openMenu);\n    };\n    const handleBtnClick1 = () => {\n      setOpenMenu1(!openMenu1);\n    };\n    const handleBtnClick2 = () => {\n      setOpenMenu2(!openMenu2);\n    };\n    const handleBtnClick3 = () => {\n      setOpenMenu3(!openMenu3);\n    };\n    const closeMenu = () => {\n      setOpenMenu(false);\n    };\n    const closeMenu1 = () => {\n      setOpenMenu1(false);\n    };\n    const closeMenu2 = () => {\n      setOpenMenu2(false);\n    };\n    const closeMenu3 = () => {\n      setOpenMenu3(false);\n    };\n\n    const ref = useOnclickOutside(() => {\n      closeMenu();\n    });\n    const ref1 = useOnclickOutside(() => {\n      closeMenu1();\n    });\n    const ref2 = useOnclickOutside(() => {\n      closeMenu2();\n    });\n    const ref3 = useOnclickOutside(() => {\n      closeMenu3();\n    });\n    \n\n    const [showmenu, btn_icon] = useState(false);\n    const [showpop, btn_icon_pop] = useState(false);\n    const [shownot, btn_icon_not] = useState(false);\n    const closePop = () => {\n      btn_icon_pop(false);\n    };\n    const closeNot = () => {\n      btn_icon_not(false);\n    };\n    const refpop = useOnclickOutside(() => {\n      closePop();\n    });\n    const refpopnot = useOnclickOutside(() => {\n      closeNot();\n    });\n\n    useEffect(() => {\n     connectWalletAlready();\n    const header = document.getElementById(\"myHeader\");\n    const totop = document.getElementById(\"scroll-to-top\");\n    const sticky = header.offsetTop;\n    const scrollCallBack = window.addEventListener(\"scroll\", () => {\n        btn_icon(false);\n        if (window.pageYOffset > sticky) {\n          header.classList.add(\"sticky\");\n          totop.classList.add(\"show\");\n          \n        } else {\n          header.classList.remove(\"sticky\");\n          totop.classList.remove(\"show\");\n        } if (window.pageYOffset > sticky) {\n          closeMenu();\n        }\n      });\n      return () => {\n        window.removeEventListener(\"scroll\", scrollCallBack);\n      };\n    }, []);\n\n    return (\n    <header className={`navbar white ${className}`} id=\"myHeader\">\n     <div className='container'>\n       <div className='row w-100-nav'>\n\n          <div className='logo px-0'>\n              <div className='navbar-title navbar-item'>\n                <NavLink to=\"/\">\n                  <h3>BOOFCLUB</h3>\n                {/*\n                <img\n                    src=\"/img/logo.png\"\n                    className=\"img-fluid d-block\"\n                    alt=\"#\"\n                  />\n                */}\n                </NavLink>\n              </div>\n          </div>\n                    \n              <BreakpointProvider>\n                <Breakpoint l down>\n                  {showmenu && \n                  <div className='menu'>\n\n                    <div className='navbar-item'>\n                      <NavLink to=\"/\" onClick={() => btn_icon(!showmenu)}>\n                        Home\n                      </NavLink>\n                    </div>\n\n                    <div className='navbar-item'>\n                      <NavLink to=\"/airdrop\" onClick={() => btn_icon(!showmenu)}>\n                        Airdrop\n                      </NavLink>\n                    </div>\n\n                    <div className='navbar-item'>\n                       <a href=\"https://testnets.opensea.io/collection/booftest\" target=\"_blank\">\n                        Explore\n                      </a>\n                    </div>\n\n                    <div className='navbar-item'>\n                      <NavLink to=\"/activity\" onClick={() => btn_icon(!showmenu)}>\n                        Activity\n                      </NavLink>\n                    </div>\n                    \n                  </div>\n                  }\n                </Breakpoint>\n\n                <Breakpoint xl>\n                  <div className='menu'>\n\n                    <div className='navbar-item'>\n                      <NavLink to=\"/\">\n                      Home\n                      <span className='lines'></span>\n                      </NavLink>\n                    </div>\n\n                    <div className='navbar-item'>\n                      <NavLink to=\"/airdrop\">\n                      Airdrop\n                      <span className='lines'></span>\n                      </NavLink>\n                    </div>\n\n                    <div className='navbar-item'>\n                      <a href=\"https://testnets.opensea.io/collection/booftest\" target=\"_blank\">\n                      Explore\n                      <span className='lines'></span>\n                      </a>\n                    </div>\n\n                    <div className='navbar-item'>\n                      <NavLink to=\"/activity\">\n                      Activity\n                      <span className='lines'></span>\n                      </NavLink>\n                    </div>\n\n                   \n\n                  </div>\n                </Breakpoint>\n              </BreakpointProvider>\n\n              <div className='mainside'>\n                <div className='connect-wal'>\n                {connectBtn}\n                </div>\n              </div>\n                  \n      </div>\n\n        <button className=\"nav-icon\" onClick={() => btn_icon(!showmenu)}>\n          <div className=\"menu-line white\"></div>\n          <div className=\"menu-line1 white\"></div>\n          <div className=\"menu-line2 white\"></div>\n        </button>\n\n      </div>     \n    </header>\n    );\n}\nexport default Header;","import React, { useEffect, useState } from 'react';\nimport Reveal from 'react-awesome-reveal';\nimport { keyframes } from \"@emotion/react\";\n\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\nimport nftAbi from '../abis/nft.json';\n\nconst fadeInUp = keyframes`\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    transform: translateY(40px);\n  }\n  100% {\n    opacity: 1;\n    -webkit-transform: translateY(0);\n    transform: translateY(0);\n  }\n`;\n\n\n\nconst useSlidermainzero = function() {\n  const [account, setAccount] = React.useState(\"\");\n  const [showContent, setShowContent] = React.useState(\"\");\n\n  const mintAirDrop = async() => {\n   if(typeof window.ethereum!=='undefined'){\n\n      const web3 = new Web3(window.ethereum);\n      const accounts = await web3.eth.getAccounts();\n      const account = accounts[0];\n      Web3EthContract.setProvider(web3);\n\n      const SmartContractObj = new Web3EthContract( nftAbi, \"0x6c31916d634BBc7Ec2fc8A264789d3d7832D4497\" );\n      const receipt = await SmartContractObj.methods.mintAirDrop(account).send({from: account});\n      console.log(receipt);\n      checkAirdrop();\n  }\n}\n\n  const checkAirdrop = async() => {\n\n    if(typeof window.ethereum!=='undefined'){\n      const web3 = new Web3(window.ethereum);\n      const accounts = await web3.eth.getAccounts();\n      const account = accounts[0];\n      setAccount(account);\n\n      if(typeof account !=='undefined'){\n        Web3EthContract.setProvider(web3);\n\n        const SmartContractObj = new Web3EthContract( nftAbi, \"0x6c31916d634BBc7Ec2fc8A264789d3d7832D4497\" );\n\n        const receipt = await SmartContractObj.methods.airdrop(account).call();\n\n        let content = [];\n\n        if (receipt.receiveAirdrop) {\n          content.push(<>\n            <div className=\"col-md-12 align-items-center text-center\">\n                    <span>\n                        <img className=\"lazy\" src=\"/img/airdrop/airdrop.png\" alt=\"\" width=\"300px\" />\n                    </span>\n                </div>\n                <div className=\"spacer-double\"></div>\n                <Reveal className='onStep' keyframes={fadeInUp} delay={300} duration={600}>\n                <h1 className=\"text-center\">Airdrop NFT</h1>\n                </Reveal>\n                <Reveal className='onStep' keyframes={fadeInUp} delay={600} duration={600}>\n                <p className=\"lead text-center\">\n                congratulations\n                </p>\n                </Reveal>\n                <div className=\"spacer-10\"></div>\n                <Reveal className='onStep' keyframes={fadeInUp} delay={800} duration={600}>\n                <div className='d-flex justify-content-center'>\n                  <span onClick={()=> mintAirDrop()} className=\"btn-main inline lead\">Mint Airdrop</span>\n                </div>\n                <div className=\"spacer-single\"></div>\n                <div className=\"spacer-double\"></div>\n                </Reveal></>);\n        }else{\n          content.push(<>\n                <div className=\"spacer-double\"></div>\n                <Reveal className='onStep' keyframes={fadeInUp} delay={300} duration={600}>\n                  <h1 className=\"text-center\">Sorry</h1>\n                </Reveal>\n                \n                <div className=\"spacer-single\"></div>\n                <div className=\"spacer-double\"></div>\n                </>);\n        }\n\n        setShowContent(content);\n      }\n      \n    }\n\n  }\n//\n  useEffect(() => {\n    checkAirdrop();\n\n  }, []);\n\n  return(\n    <div className=\"container\">\n      <div className=\"row align-items-center\">\n            <div className=\"col-md-6 m-auto\">\n                <div className=\"spacer-single\"></div>\n\n                {showContent}\n\n                \n            </div>\n        </div>\n    </div>\n  );\n};\nexport default useSlidermainzero;","import React from 'react';\nimport Reveal from 'react-awesome-reveal';\nimport { keyframes } from \"@emotion/react\";\n\nconst fadeInUp = keyframes`\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    transform: translateY(40px);\n  }\n  100% {\n    opacity: 1;\n    -webkit-transform: translateY(0);\n    transform: translateY(0);\n  }\n`;\n\nconst featurebox= () => (\n <div className='row'>\n            <div className=\"col-lg-4 col-md-6 mb-3\">\n                <div className=\"feature-box f-boxed style-3\">\n                  <Reveal className='onStep' keyframes={fadeInUp} delay={0} duration={600} triggerOnce>\n                    <i className=\"bg-color-2 i-boxed icon_wallet\"></i>\n                  </Reveal>\n                    <div className=\"text\">\n                      <Reveal className='onStep' keyframes={fadeInUp} delay={100} duration={600} triggerOnce>\n                        <h4 className=\"\">Set up your wallet</h4>\n                      </Reveal>\n                      <Reveal className='onStep' keyframes={fadeInUp} delay={200} duration={600} triggerOnce>\n                        <p className=\"\">Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem.</p>\n                      </Reveal>\n                    </div>\n                    <i className=\"wm icon_wallet\"></i>\n                </div>\n            </div>\n\n          <div className=\"col-lg-4 col-md-6 mb-3\">\n              <div className=\"feature-box f-boxed style-3\">\n                <Reveal className='onStep' keyframes={fadeInUp} delay={0} duration={600} triggerOnce>\n                  <i className=\" bg-color-2 i-boxed icon_cloud-upload_alt\"></i>\n                </Reveal>\n                  <div className=\"text\">\n                    <Reveal className='onStep' keyframes={fadeInUp} delay={100} duration={600} triggerOnce>\n                      <h4 className=\"\">Add your NFT's</h4>\n                    </Reveal>\n                    <Reveal className='onStep' keyframes={fadeInUp} delay={200} duration={600} triggerOnce>\n                      <p className=\"\">Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem.</p>\n                    </Reveal>\n                  </div>\n                  <i className=\"wm icon_cloud-upload_alt\"></i>\n              </div>\n          </div>\n\n          <div className=\"col-lg-4 col-md-6 mb-3\">\n              <div className=\"feature-box f-boxed style-3\">\n                <Reveal className='onStep' keyframes={fadeInUp} delay={0} duration={600} triggerOnce>\n                  <i className=\" bg-color-2 i-boxed icon_tags_alt\"></i>\n                </Reveal>\n                  <div className=\"text\">\n                    <Reveal className='onStep' keyframes={fadeInUp} delay={100} duration={600} triggerOnce>\n                      <h4 className=\"\">Sell your NFT's</h4>\n                    </Reveal>\n                    <Reveal className='onStep' keyframes={fadeInUp} delay={200} duration={600} triggerOnce>\n                      <p className=\"\">Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem.</p>\n                    </Reveal>\n                  </div>\n                  <i className=\"wm icon_tags_alt\"></i>\n              </div>\n          </div>\n        </div>\n);\nexport default featurebox;","import { createSelector, createStructuredSelector } from \"reselect\";\n\n\n//Store Selectors\nexport const nftBreakdownState = (state) => state.NFT.nftBreakdown;\nexport const nftShowcaseState = (state) => state.NFT.nftShowcase;\nexport const nftDetailState = (state) => state.NFT.nftDetail;\nexport const hotCollectionsState = (state) => state.hotCollection.hotCollections;\nexport const authorsState = (state) => state.authors.authorList;\nexport const authorRankingsState = (state) => state.authors.authorRanking;\n\n//blogs\nexport const blogsState = (state) => state.blogs.blogPosts;\nexport const recentPostsState = (state) => state.blogs.recentPosts;\nexport const tagsState = (state) => state.blogs.tags;\nexport const commentsState = (state) => state.blogs.comments;\n\nexport const auctionedNfts = createSelector(nftBreakdownState, ( nfts ) => {\n    if(!nfts.data) {\n        return [];\n    }\n    const acutioned = nfts.data.filter(nft => !!nft.deadline);\n    return acutioned;\n});\n\nexport const nftFilter = createStructuredSelector({\n    categories: (state) => state.filters.selectedCategories,\n    status: (state) => state.filters.selectedStatus,\n    itemsType: (state) => state.filters.selectedItemsType,\n    collections: (state) => state.filters.selectedCollections,\n    nftTitle: (state) => state.filters.filterNftTitle\n});\n\nexport const nftItems = createSelector(nftFilter, nftBreakdownState, ( filters, nfts ) => {\n    let { data } = nfts;\n    const { categories, status, itemsType, collections, nftTitle } = filters;\n    \n    if(!data) {\n        return [];\n    }\n\n    if(categories.size) {\n        data = data.filter( nft => categories.has(nft.category));\n    }\n    if(status.size) {\n        data = data.filter( nft => status.has(nft.status));\n    }\n    if(itemsType.size) {\n        data = data.filter( nft => itemsType.has(nft.item_type));\n    }\n    if(collections.size) {\n        data = data.filter( nft => collections.has(nft.collections));\n    }\n    if(nftTitle.trim().length) {\n        let pattern = new RegExp(`${nftTitle.trim()}`, 'gi');\n        console.log(pattern)\n        data = data.filter( nft => nft.title.match(pattern));\n    }\n\n    return data;\n});","import axios from 'axios';\n\nexport const Axios = axios.create();\nexport const Canceler = axios.CancelToken.source();","import { \n    createAction as action, \n    createAsyncAction as asyncAction \n} from 'typesafe-actions';\n\nexport const getNftBreakdown = asyncAction(\n    'nft/GET_NFT_BREAKDOWN',\n    'nft/GET_NFT_BREAKDOWN_SUCCESS',\n    'nft/GET_NFT_BREAKDOWN_FAIL'\n)();\n\nexport const getNftShowcase = asyncAction(\n    'nft/GET_NFT_SHOWCASE',\n    'nft/GET_NFT_SHOWCASE_SUCCESS',\n    'nft/GET_NFT_SHOWCASE_FAIL'\n)();\n\nexport const getNftDetail = asyncAction(\n    'nft/GET_NFT_DETAIL',\n    'nft/GET_NFT_DETAIL_SUCCESS',\n    'nft/GET_NFT_DETAIL_FAIL'\n)();\n\nexport const getHotCollections = asyncAction(\n    'nft/GET_HOT_COLLECTIONS',\n    'nft/GET_HOT_COLLECTIONS_SUCCESS',\n    'nft/GET_HOT_COLLECTIONS_FAIL'\n)();\n\nexport const getAuthorList = asyncAction(\n    'nft/GET_AUTHOR_LIST',\n    'nft/GET_AUTHOR_LIST_SUCCESS',\n    'nft/GET_AUTHOR_LIST_FAIL'\n)();\n\nexport const getAuthorRanking = asyncAction(\n    'nft/GET_AUTHOR_RANKING',\n    'nft/GET_AUTHOR_RANKING_SUCCESS',\n    'nft/GET_AUTHOR_RANKING_FAIL'\n)();\n\nexport const getBlogPosts = asyncAction(\n    'nft/GET_BLOG_POSTS',\n    'nft/GET_BLOG_POSTS_SUCCESS',\n    'nft/GET_BLOG_POSTS_FAIL'\n)();\n\nexport const getRecentPosts = asyncAction(\n    'nft/GET_RECENT_POSTS',\n    'nft/GET_RECENT_POSTS_SUCCESS',\n    'nft/GET_RECENT_POSTS_FAIL'\n)();\n\nexport const getTags = asyncAction(\n    'nft/GET_TAGS',\n    'nft/GET_TAGS_SUCCESS',\n    'nft/GET_TAGS_FAIL'\n)();\n\nexport const getComments = asyncAction(\n    'nft/GET_COMMENTS',\n    'nft/GET_COMMENTS_SUCCESS',\n    'nft/GET_COMMENTS_FAIL'\n)();\n\nexport const clearNfts = action('nft/CLEAR_ALL_NFTS')();\nexport const clearFilter = action('nft/CLEAR_FILTER')();\nexport const filterCategories = action('nft/FILTER_CATEGORIES')();\nexport const filterStatus = action('nft/FILTER_STATUS')();\nexport const filterItemsType = action('nft/FILTER_ITEMS_TYPE')();\nexport const filterCollections = action('nft/FILTER_COLLECTIONS')();\nexport const filterNftTitle = action('nft/FILTER_NFT_TITLE')();","\nexport const initEntityState = (initialValue, loading = true) => ({\n    loading,\n    data: initialValue,\n    loadFailed: false,\n    canceler: null\n  });\n  \n  export const entityLoadingStarted = (state, canceler) => ({\n    ...state,\n    canceler,\n    loading: true,\n    loadFailed: false\n  });\n  \n  export const entityLoadingSucceeded = (state, data) => ({\n    ...state,\n    data,\n    loading: false,\n    loadFailed: false,\n    canceler: null\n  });\n  \n  export const entityLoadingFailed = (state) => ({\n    ...state,\n    loading: false,\n    loadFailed: true,\n    canceler: null\n  });\n\n  export const handleSelection = (selectedIds, selectId, singleSelect = false) => {\n\n    const selected = new Set(selectedIds || []);\n    \n    if(singleSelect) return new Set([selectId]);\n\n    if (selected.has(selectId)) {\n      selected.delete(selectId);\n    } else {\n      selected.add(selectId);\n    }\n  \n    return selected;\n  };\n\n  export const shuffleArray = (array) => {\n    let shuffeled = array;\n\n    for (let i = shuffeled.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [shuffeled[i], shuffeled[j]] = [shuffeled[j], shuffeled[i]];\n    }\n\n    return shuffeled;\n  }","import React, { Component } from \"react\";\n\nclass Clock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n  }\n  componentDidMount() {\n    this.getTimeUntil(this.props.deadline);\n    setInterval(() => this.getTimeUntil(this.props.deadline), 1000);\n  }\n  leading0(num) {\n    return num < 10 ? \"0\" + num : num;\n  }\n  getTimeUntil(deadline) {\n    const time = Date.parse(deadline) - Date.parse(new Date());\n    if (time < 0) {\n      this.setState({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n    } else {\n      const seconds = Math.floor((time / 1000) % 60);\n      const minutes = Math.floor((time / 1000 / 60) % 60);\n      const hours = Math.floor((time / (1000 * 60 * 60)) % 24);\n      const days = Math.floor(time / (1000 * 60 * 60 * 24));\n      this.setState({ days, hours, minutes, seconds });\n    }\n  }\n  componentWillUnmount() {\n    // fix Warning: Can't perform a React state update on an unmounted component\n    this.setState = (state,callback)=>{\n        return;\n    };\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"Clock-days\">{this.leading0(this.state.days)}d</div>\n        <div className=\"Clock-hours\">\n          {this.leading0(this.state.hours)}h\n        </div>\n        <div className=\"Clock-minutes\">\n          {this.leading0(this.state.minutes)}m\n        </div>\n        <div className=\"Clock-seconds\">\n          {this.leading0(this.state.seconds)}s\n        </div>\n      </div>\n    );\n  }\n}\nexport default Clock;\n","import React, { memo } from 'react';\nimport styled from \"styled-components\";\nimport Clock from \"./Clock\";\nimport { navigate } from '@reach/router';\nimport api from '../../core/api';\n\nconst Outer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n  overflow: hidden;\n  border-radius: 8px;\n`;\n\n//react functional component\nconst NftCard = ({ nft, className = 'd-item col-lg-3 col-md-6 col-sm-6 col-xs-12 mb-4', clockTop = true, height, onImgLoad }) => {\n\n    const navigateTo = (link) => {\n        navigate(link);\n    }\n\n    return (\n        <div className={className}>\n            <div className=\"nft__item m-0\">\n            { nft.item_type === 'single_items' ? (\n             <div className='icontype'><i className=\"fa fa-bookmark\"></i></div>   \n             ) : (  \n             <div className='icontype'><i className=\"fa fa-shopping-basket\"></i></div>\n                )\n            }\n                { nft.deadline && clockTop &&\n                    <div className=\"de_countdown\">\n                        <Clock deadline={nft.deadline} />\n                    </div>\n                }\n                <div className=\"author_list_pp\">\n                    <span onClick={()=> navigateTo(nft.author_link)}>                                    \n                        <img className=\"lazy\" src={api.baseUrl + nft.author.avatar.url} alt=\"\"/>\n                        <i className=\"fa fa-check\"></i>\n                    </span>\n                </div>\n                <div className=\"nft__item_wrap\" style={{height: `${height}px`}}>\n                <Outer>\n                    <span>\n                        <img onLoad={onImgLoad} src={api.baseUrl + nft.preview_image.url} className=\"lazy nft__item_preview\" alt=\"\"/>\n                    </span>\n                </Outer>\n                </div>\n                { nft.deadline && !clockTop &&\n                    <div className=\"de_countdown\">\n                        <Clock deadline={nft.deadline} />\n                    </div>\n                }\n                <div className=\"nft__item_info\">\n                    <span onClick={() => navigateTo(`${nft.nft_link}/${nft.id}`)}>\n                        <h4>{nft.title}</h4>\n                    </span>\n                    { nft.status === 'has_offers' ? (\n                            <div className=\"has_offers\">\n                                <span className='through'>{nft.priceover}</span> {nft.price} ETH\n                            </div> \n                        ) : (\n                            <div className=\"nft__item_price\">\n                                {nft.price} ETH\n                                { nft.status === 'on_auction' && \n                                    <span>{nft.bid}/{nft.max_bid}</span>\n                                }\n                            </div>\n                        )\n                    }\n                    <div className=\"nft__item_action\">\n                        <span onClick={() => navigateTo(`${nft.bid_link}/${nft.id}`)}>{ nft.status === 'on_auction' ? 'Place a bid' : 'Buy Now' }</span>\n                    </div>\n                    <div className=\"nft__item_like\">\n                        <i className=\"fa fa-heart\"></i><span>{nft.likes}</span>\n                    </div>                            \n                </div> \n            </div>\n        </div>             \n    );\n};\n\nexport default memo(NftCard);","import React from 'react';\nimport SliderMainZero from '../components/SliderMainZero';\nimport FeatureBox from '../components/FeatureBox';\nimport CarouselCollectionRedux from '../components/CarouselCollectionRedux';\nimport ColumnNewRedux from '../components/ColumnNewRedux';\nimport AuthorListRedux from '../components/AuthorListRedux';\nimport Footer from '../components/footer';\n\nconst hometwo= () => (\n  <div>\n      <section className=\"jumbotron no-bg bg-gray\">\n         <SliderMainZero/>\n      </section>\n\n      \n\n  </div>\n);\nexport default hometwo;","import React from 'react';\nimport Reveal from 'react-awesome-reveal';\nimport { keyframes } from \"@emotion/react\";\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n\nimport nftAbi from '../abis/nft.json';\n\nconst fadeInUp = keyframes`\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    transform: translateY(40px);\n  }\n  100% {\n    opacity: 1;\n    -webkit-transform: translateY(0);\n    transform: translateY(0);\n  }\n`;\nconst inline = keyframes`\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n  .d-inline{\n    display: inline-block;\n   }\n`;\n\nconst mysteryBox = async() => {\n   if(typeof window.ethereum!=='undefined'){\n\n      const web3 = new Web3(window.ethereum);\n      const accounts = await web3.eth.getAccounts();\n      const account = accounts[0];\n\n      Web3EthContract.setProvider(web3);\n\n      const SmartContractObj = new Web3EthContract( nftAbi, \"0x6c31916d634BBc7Ec2fc8A264789d3d7832D4497\" );\n\n      //var nft = new web3.eth.Contract(nftAbi.abi, \"0x6c31916d634BBc7Ec2fc8A264789d3d7832D4497\");\n\n      let _amount = 0.001 * 10**18;\n      const receipt = await SmartContractObj.methods.mint(1).send({value: _amount.toString(),from: account});\n      console.log(receipt);\n  }\n}\n\nconst slidermainparticle= () => (\n <div className=\"container\">\n    <div className=\"row align-items-center\">\n          <div className=\"col-md-6\">\n              <div className=\"spacer-single\"></div>\n              \n              <Reveal className='onStep' keyframes={fadeInUp} delay={300} duration={900} triggerOnce>\n              <h1 className=\"col-white\">Discover <span className=\"color\">rare</span> digital art and collect NFTs</h1>\n              </Reveal>\n\n              <Reveal className='onStep' keyframes={fadeInUp} delay={600} duration={900} triggerOnce>\n              <p className=\"lead col-white\">\n              Unit of data stored on a digital ledger, called a blockchain, that certifies a digital asset to be unique and therefore not interchangeable\n              </p>\n              </Reveal>\n              <div className=\"spacer-10\"></div>\n              <Reveal className='onStep d-inline' keyframes={inline} delay={800} duration={900} triggerOnce>\n\n              <span onClick={()=> mysteryBox()} className=\"btn-main inline lead\">MINT</span>\n              <span onClick={()=> window.open(\"https://testnets.opensea.io/collection/boott\")} className=\"btn-main inline lead white\">Explore Collection</span>\n\n              <div className=\"mb-sm-30\"></div>\n              </Reveal>\n\n\n          </div>\n      </div>\n    </div>\n);\n\nexport default slidermainparticle;","import React from 'react';\nimport SliderMainParticleGrey from '../components/SliderMainParticleGrey1';\nimport CarouselCollectionRedux from '../components/CarouselCollectionReduxNew';\nimport CarouselNewRedux from '../components/CarouselNewReduxNew';\nimport AuthorListRedux from '../components/AuthorListRedux';\nimport Catgor from '../components/Catgor';\nimport Footer from '../components/footer';\n\nimport { createGlobalStyle } from 'styled-components';\nconst GlobalStyles = createGlobalStyle`\n  .navbar{\n    background: #fff;\n  }\n  .col-white {\n      color: #0d0c22;\n  }\n  .de_count{\n    h3{\n      font-size: 36px;\n      margin-bottom: 0;\n      span {\n        font-size: 36px;\n      }\n    }\n  }\n  .btn-main.inline.white{\n    background: rgba(131,100,266, .2);\n  }\n  .yelbg{\n    background-color: rgb(255, 249, 225);\n  }\n  .yelbg-2{\n    background-color: rgb(247, 255, 231);\n  }\n  .greybg{\n    background-color: rgb(246, 245, 251);\n  }\n  h2{\n    font-size: 30px;\n    margin-bottom: 20px;\n    margin-top:0;\n  }\n  .pb60 {\n    padding-bottom: 60px;\n    padding-top: 60px;\n  }\n  @media only screen and (max-width: 1199px) { \n    .breadcumb.h-vh{\n      background-image: none !important;\n    }\n  }\n`;\n\n\nconst home= () => (\n  <div>\n    <GlobalStyles />\n      <section className=\"jumbotron breadcumb no-bg h-vh\" style={{backgroundImage: `url(${'./img/background/bg.png'})`}}>\n         <SliderMainParticleGrey/>\n      </section>\n{/*\n      <section className='container'>\n        <Catgor/>\n      </section>\n\n      <section className='pb60 yelbg'>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-lg-12'>\n                <h2>Top Sellers</h2>\n            </div>\n            <div className='col-lg-12'>\n              <AuthorListRedux/>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className='pb60 yelbg-2'>\n        <div className='container'>\n        <div className='row'>\n          <div className='col-lg-12'>\n              <h2>Hot Collections</h2>\n          </div>\n          <div className='col-lg-12'>\n            <CarouselCollectionRedux/>\n          </div>\n        </div>\n        </div>\n      </section>\n\n      <section className='pb60 greybg'>\n        <div className='container'>\n        <div className='row'>\n          <div className='col-lg-12'>\n              <h2>New Items</h2>\n          </div>\n          <div className='col-lg-12'>\n            <CarouselNewRedux/>\n          </div>\n        </div>\n        </div>\n      </section>\n\n    <Footer />\n*/}\n  </div>\n);\nexport default home;","import React, { memo, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport Slider from \"react-slick\";\nimport styled from \"styled-components\";\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport Clock from \"./Clock\";\nimport { carouselNew5 } from './constants';\nimport * as selectors from '../../store/selectors';\nimport { fetchNftsBreakdown } from \"../../store/actions/thunks\";\nimport api from \"../../core/api\";\n\nconst Outer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n`;\n\nconst CarouselNewRedux = () => {\n\n    const dispatch = useDispatch();\n    const nftsState = useSelector(selectors.nftBreakdownState);\n    const nfts = nftsState.data ? nftsState.data : [];\n\n    const [height, setHeight] = useState(0);\n\n    const onImgLoad = ({target:img}) => {\n        let currentHeight = height;\n        if(currentHeight < img.offsetHeight) {\n            setHeight(img.offsetHeight);\n        }\n    }\n    \n    useEffect(() => {\n        dispatch(fetchNftsBreakdown());\n    }, [dispatch]);\n\n    return (\n        <div className='nft'>\n          <Slider {...carouselNew5}>\n          {nfts && nfts.map( (nft, index) => (\n            <div className='itm' index={index + 1} key={index}>\n              <div className=\"d-item\">\n                <div className=\"nft__item\">\n                    { nft.deadline &&\n                        <div className=\"de_countdown\">\n                            <Clock deadline={nft.deadline} />\n                        </div>\n                    }\n                    <div className=\"author_list_pp\">\n                        <span onClick={()=> window.open(\"/home1\", \"_self\")}>                                    \n                            <img className=\"lazy\" src={api.baseUrl + nft.author.avatar.url} alt=\"\"/>\n                            <i className=\"fa fa-check\"></i>\n                        </span>\n                    </div>\n                    <div className=\"nft__item_wrap\" style={{height: `${height}px`}}>\n                      <Outer>\n                        <span>\n                            <img src={api.baseUrl + nft.preview_image.url} className=\"lazy nft__item_preview\" onLoad={onImgLoad} alt=\"\"/>\n                        </span>\n                      </Outer>\n                    </div>\n                    <div className=\"nft__item_info\">\n                        <span onClick={()=> window.open(\"/#\", \"_self\")}>\n                            <h4>{nft.title}</h4>\n                        </span>\n                        <div className=\"nft__item_price\">\n                            {nft.price} ETH<span>{nft.bid}/{nft.max_bid}</span>\n                        </div>\n                        <div className=\"nft__item_action\">\n                            <span onClick={()=> window.open(nft.bid_link, \"_self\")}>Place a bid</span>\n                        </div>\n                        <div className=\"nft__item_like\">\n                            <i className=\"fa fa-heart\"></i><span>{nft.likes}</span>\n                        </div>                                                        \n                    </div> \n                </div>\n              </div>\n            </div>\n          ))}\n          </Slider>\n        </div>\n    );\n}\n\nexport default memo(CarouselNewRedux);\n","import React from 'react';\nimport { Router, Location, Redirect } from '@reach/router';\nimport ScrollToTopBtn from './menu/ScrollToTop';\nimport Header from './menu/header';\nimport Home2 from './pages/home2';\nimport Home4 from './pages/home4';\n\n\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  :root {\n    scroll-behavior: unset;\n  }\n`;\n\nexport const ScrollTop = ({ children, location }) => {\n  React.useEffect(() => window.scrollTo(0,0), [location])\n  return children\n}\n\nconst PosedRouter = ({ children }) => (\n  <Location>\n    {({ location }) => (\n      <div id='routerhang'>\n        <div key={location.key}>\n          <Router location={location}>\n            {children}\n          </Router>\n        </div>\n      </div>\n    )}\n  </Location>\n);\n\nconst app= () => (\n  <div className=\"wraper\">\n  <GlobalStyles />\n\n    <Header/>\n\n      <PosedRouter>\n      <ScrollTop path=\"/\">\n        <Home4 exact path=\"/\">\n          <Redirect to=\"/home4\" />\n        </Home4>\n        <Home2 path=\"/airdrop\" />\n        \n        </ScrollTop>\n      </PosedRouter>\n    <ScrollToTopBtn />\n  </div>\n);\nexport default app;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { getType } from 'typesafe-actions';\nimport * as actions from '../actions';\nimport { initEntityState, entityLoadingStarted, entityLoadingSucceeded, entityLoadingFailed } from '../utils';\n\nexport const defaultState = {\n  nftBreakdown: initEntityState(null),\n  nftDetail: initEntityState(null),\n  nftShowcase: initEntityState(null)\n};\n\nconst states = (state = defaultState, action) => {\n  switch (action.type) {\n    \n    case getType(actions.getNftBreakdown.request):\n      return { ...state, nftBreakdown: entityLoadingStarted(state.nftBreakdown, action.payload) };\n    case getType(actions.getNftBreakdown.success):\n      //append existing data with new data\n      let payload = state.nftBreakdown.data ? [...state.nftBreakdown.data, ...action.payload] : action.payload;\n      return { ...state, nftBreakdown: entityLoadingSucceeded(state.nftBreakdown, payload) };\n    case getType(actions.getNftBreakdown.failure):\n      return { ...state, nftBreakdown: entityLoadingFailed(state.nftBreakdown) };\n    \n    case getType(actions.getNftDetail.request):\n      return { ...state, nftDetail: entityLoadingStarted(state.nftDetail, action.payload) };\n    case getType(actions.getNftDetail.success):\n      return { ...state, nftDetail: entityLoadingSucceeded(state.nftDetail, action.payload) };\n    case getType(actions.getNftDetail.failure):\n      return { ...state, nftDetail: entityLoadingFailed(state.nftDetail) };\n    \n    case getType(actions.getNftShowcase.request):\n      return { ...state, nftShowcase: entityLoadingStarted(state.nftShowcase, action.payload) };\n    case getType(actions.getNftShowcase.success):\n      return { ...state, nftShowcase: entityLoadingSucceeded(state.nftShowcase, action.payload) };\n    case getType(actions.getNftShowcase.failure):\n      return { ...state, nftShowcase: entityLoadingFailed(state.nftShowcase) };\n\n    case getType(actions.clearNfts):\n      return { ...state, nftBreakdown: initEntityState(null)};\n    \n    default:\n      return state;\n  }\n};\n\nexport default states;\n","import { getType } from 'typesafe-actions';\nimport * as actions from '../actions';\nimport { initEntityState, entityLoadingStarted, entityLoadingSucceeded, entityLoadingFailed } from '../utils';\n\nexport const defaultState = {\n  hotCollections: initEntityState(null)\n};\n\nconst states = (state = defaultState, action) => {\n  switch (action.type) {\n    \n    case getType(actions.getHotCollections.request):\n      return { ...state, hotCollections: entityLoadingStarted(state.hotCollections, action.payload) };\n    case getType(actions.getHotCollections.success):\n      return { ...state, hotCollections: entityLoadingSucceeded(state.hotCollections, action.payload) };\n    case getType(actions.getHotCollections.failure):\n      return { ...state, hotCollections: entityLoadingFailed(state.hotCollections) };    \n    default:\n      return state;\n  }\n};\n\nexport default states;\n","import { getType } from 'typesafe-actions';\nimport * as actions from '../actions';\nimport { initEntityState, entityLoadingStarted, entityLoadingSucceeded, entityLoadingFailed } from '../utils';\n\nexport const defaultState = {\n  authorList: initEntityState(null),\n  authorRanking: initEntityState(null),\n};\n\nconst states = (state = defaultState, action) => {\n  switch (action.type) {\n    \n    case getType(actions.getAuthorList.request):\n      return { ...state, authorList: entityLoadingStarted(state.authorList, action.payload) };\n    case getType(actions.getAuthorList.success):\n      return { ...state, authorList: entityLoadingSucceeded(state.authorList, action.payload) };\n    case getType(actions.getAuthorList.failure):\n      return { ...state, authorList: entityLoadingFailed(state.authorList) };\n    \n      case getType(actions.getAuthorRanking.request):\n      return { ...state, authorRanking: entityLoadingStarted(state.authorRanking, action.payload) };\n    case getType(actions.getAuthorRanking.success):\n      return { ...state, authorRanking: entityLoadingSucceeded(state.authorRanking, action.payload) };\n    case getType(actions.getAuthorRanking.failure):\n      return { ...state, authorRanking: entityLoadingFailed(state.authorRanking) };\n\n    default:\n      return state;\n  }\n};\n\nexport default states;\n","import { getType } from 'typesafe-actions';\nimport * as actions from '../actions';\nimport { handleSelection } from '../utils';\n\nexport const defaultState = {\n  selectedCategories: new Set(),\n  selectedStatus: new Set(),\n  selectedItemsType: new Set(),\n  selectedCollections: new Set(),\n  filterNftTitle: ''\n};\n\nconst states = (state = defaultState, action) => {\n    const payload = action.payload;\n  switch (action.type) {    \n    case getType(actions.filterCategories):\n        let selectedCategories = payload.value ? handleSelection(state.selectedCategories, payload.value, payload.singleSelect) : new Set();\n      return { ...state, selectedCategories};\n\n    case getType(actions.filterStatus):\n        let selectedStatus = payload.value ? handleSelection(state.selectedStatus, payload.value, payload.singleSelect) : new Set();\n      return { ...state, selectedStatus};\n\n    case getType(actions.filterItemsType):\n        let selectedItemsType = payload.value ? handleSelection(state.selectedItemsType, payload.value, payload.singleSelect) : new Set();\n      return { ...state, selectedItemsType};\n\n    case getType(actions.filterCollections):\n        let selectedCollections = payload.value ? handleSelection(state.selectedCollections, payload.value, payload.singleSelect) : new Set();\n      return { ...state, selectedCollections};\n    \n    case getType(actions.filterNftTitle):\n      return { ...state, filterNftTitle: action.payload};\n\n    case getType(actions.clearFilter):\n      return { \n        selectedCategories: new Set(),\n        selectedStatus: new Set(),\n        selectedItemsType: new Set(),\n        selectedCollections: new Set(),\n        filterNftTitle: ''\n      };\n    \n    default:\n      return state;\n  }\n};\n\nexport default states;\n","import { getType } from 'typesafe-actions';\nimport * as actions from '../actions';\nimport { initEntityState, entityLoadingStarted, entityLoadingSucceeded, entityLoadingFailed } from '../utils';\n\nexport const defaultState = {\n  blogPosts: initEntityState(null),\n  recentPosts: initEntityState(null),\n  tags: initEntityState(null),\n  comments: initEntityState(null)\n};\n\nconst states = (state = defaultState, action) => {\n  switch (action.type) {\n    \n    case getType(actions.getBlogPosts.request):\n      return { ...state, blogPosts: entityLoadingStarted(state.blogPosts, action.payload) };\n    case getType(actions.getBlogPosts.success):\n      return { ...state, blogPosts: entityLoadingSucceeded(state.blogPosts, action.payload) };\n    case getType(actions.getBlogPosts.failure):\n      return { ...state, blogPosts: entityLoadingFailed(state.blogPosts) };\n    \n    case getType(actions.getRecentPosts.request):\n      return { ...state, recentPosts: entityLoadingStarted(state.recentPosts, action.payload) };\n    case getType(actions.getRecentPosts.success):\n      return { ...state, recentPosts: entityLoadingSucceeded(state.recentPosts, action.payload) };\n    case getType(actions.getRecentPosts.failure):\n      return { ...state, recentPosts: entityLoadingFailed(state.recentPosts) };\n    \n    case getType(actions.getTags.request):\n      return { ...state, tags: entityLoadingStarted(state.tags, action.payload) };\n    case getType(actions.getTags.success):\n      return { ...state, tags: entityLoadingSucceeded(state.tags, action.payload) };\n    case getType(actions.getTags.failure):\n      return { ...state, tags: entityLoadingFailed(state.tags) };\n    \n    case getType(actions.getComments.request):\n      return { ...state, comments: entityLoadingStarted(state.comments, action.payload) };\n    case getType(actions.getComments.success):\n      return { ...state, comments: entityLoadingSucceeded(state.comments, action.payload) };\n    case getType(actions.getComments.failure):\n      return { ...state, comments: entityLoadingFailed(state.comments) };\n\n    default:\n      return state;\n  }\n};\n\nexport default states;\n","import { combineReducers } from 'redux';\nimport nftReducer from './nfts';\nimport hotCollectionsReducer from './hotCollections';\nimport authorListReducer from './authorList';\nimport filterReducer from './filters';\nimport blogPostsReducer from './blogs';\n\nexport const rootReducer = combineReducers({\n  NFT: nftReducer,\n  hotCollection: hotCollectionsReducer,\n  authors: authorListReducer,\n  filters: filterReducer,\n  blogs: blogPostsReducer\n});\n\nconst reducers = (state, action) => rootReducer(state, action);\n\nexport default reducers;","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./assets/animated.css\";\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \nimport '../node_modules/elegant-icons/style.css';\nimport '../node_modules/et-line/style.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.js';\nimport './assets/style.scss';\nimport './assets/style_grey.scss';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\n\n//redux store\nimport { Provider } from 'react-redux'\nimport store from './store';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>, \n\tdocument.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}